// Create a Database
CREATE DATABASE IF NOT EXISTS MYDB;

use database MYDB;

create or replace table public.customer_noncluster (
	c_custkey number(38,0),
	c_name varchar(25),
	c_address varchar(40),
	c_nationkey number(38,0),
	c_phone varchar(15),
	c_acctbal number(12,2),
	c_mktsegment varchar(10),
	c_comment varchar(112)
);

select * from customer_nocluster;

select * from snowflake_SAMPLE_DATA.TPCH_SF1000.CUSTOMER
where c_comment like 'ly pending pinto beans. quickly pending requests%';

insert into public.customer_noncluster 
    select --*
        C_CUSTKEY
        ,C_NAME
        ,C_ADDRESS
        ,C_NATIONKEY
        ,C_PHONE
        ,C_ACCTBAL
        ,C_MKTSEGMENT
        ,left(C_COMMENT,100)
    from snowflake_SAMPLE_DATA.TPCH_SF1000.CUSTOMER;

CREATE OR REPLACE TABLE PUBLIC.CUSTOMER_CLUSTER (
 C_CUSTKEY NUMBER(38,0),
 C_NAME VARCHAR(25),
 C_ADDRESS VARCHAR(40),
 C_NATIONKEY NUMBER(38,0),
 C_PHONE VARCHAR(15),
 C_ACCTBAL NUMBER(12,2),
 C_MKTSEGMENT VARCHAR(10),
 C_COMMENT VARCHAR(117) )
 cluster BY (C_NATIONKEY);


 // Insert data into above clustered table
INSERT INTO PUBLIC.CUSTOMER_CLUSTER
SELECT * FROM snowflake_SAMPLE_DATA.TPCH_SF1000.CUSTOMER;

// Observe time taken and no.of partitions scanned
SELECT * FROM PUBLIC.CUSTOMER_NONCLUSTER WHERE C_NATIONKEY=2; --  15 sec -- 420/420 mp scanned
SELECT * FROM PUBLIC.CUSTOMER_CLUSTER WHERE C_NATIONKEY=2; -- 7 sec -- 22/482 mp scanned


CREATE OR REPLACE TABLE PUBLIC.ORDERS_NONCLUSTER
AS SELECT * FROM snowflake_SAMPLE_DATA.TPCH_SF100.ORDERS;

CREATE OR REPLACE TABLE PUBLIC.ORDERS_CLUSTER
AS SELECT * FROM snowflake_SAMPLE_DATA.TPCH_SF100.ORDERS;

// Add Cluster key to the table
ALTER TABLE PUBLIC.ORDERS_CLUSTER CLUSTER BY (YEAR(O_ORDERDATE));

// Observe time taken and no.of partitions scanned
SELECT * FROM PUBLIC.ORDERS_NONCLUSTER WHERE YEAR(O_ORDERDATE) = 1995;
SELECT * FROM PUBLIC.ORDERS_CLUSTER WHERE YEAR(O_ORDERDATE) = 1995; 

// Alter Table to add multiple cluster keys
ALTER TABLE PUBLIC.ORDERS_CLUSTER CLUSTER BY (YEAR(O_ORDERDATE), O_ORDERPRIORITY);

// Observe time taken and no.of partitions scanned
SELECT * FROM PUBLIC.ORDERS_NONCLUSTER WHERE YEAR(O_ORDERDATE) = 1996 and O_ORDERPRIORITY = '1-URGENT'; -- 5.5sec -- 87/229 
SELECT * FROM PUBLIC.ORDERS_CLUSTER WHERE YEAR(O_ORDERDATE) = 1996 and O_ORDERPRIORITY = '1-URGENT'; -- 4.9sec -- 10/234

// To Turn-off results cache
ALTER SESSION SET USE_CACHED_RESULT = FALSE;

//To look at clustering information
SELECT SYSTEM$CLUSTERING_INFORMATION('ORDERS_CLUSTER');